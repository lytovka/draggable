name: Release to npm registry
on:
  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        description: Release type
        options:
          - patch
          - minor
          - major
      pre-release:
        type: boolean
        description: Pre-release 

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-release
      cancel-in-progress: true
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Get Node version from .nvmrc
        run: echo NVMRC=`cat .nvmrc` >> $GITHUB_ENV
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          registry-url: https://registry.npmjs.org/
          node-version: ${{ env.NVMRC }}

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build

      - name: Bump release version
        if: ${{ github.event.inputs.pre-release == 'false' }}
        run: |
          echo "Running a $(${{ github.event.inputs.release-type }}) release"
          echo NEW_VERSION=$(npm version ${{ github.event.inputs.release-type }} --no-git-tag-version) >> $GITHUB_ENV
          echo RELEASE_TAG=`latest` >> $GITHUB_ENV

      - name: Bump pre-release version
        if: ${{ github.event.inputs.pre-release == 'true' }}
        run: |
          echo "Running a $RELEASE_TYPE release"
          NEW_VERSION=$(npm version $RELEASE_TYPE --preid=beta --no-git-tag-version)
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "RELEASE_TAG=beta" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: pre${{ github.event.inputs.release-type }}
          
      - name: Commit files and create a new tag
        run: |
          git add package.json package-lock.json
          git commit -m "chore: release $NEW_VERSION"
          git tag $NEW_VERSION

      - name: Publish to npm registry
        run: npm publish --access public --tag $RELEASE_TAG
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push changes to repo
        run: git push origin HEAD --tags
